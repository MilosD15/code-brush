@use '../utils/functions' as f;
@use '../utils/colors' as *;
@use '../components/mixins' as *;
@use '../utils/variables' as *;
@use '../utils/typography' as *;

.naming-file-container {
    width: 100%;
    background-color: var(--color-secondary);
    border-bottom: f.pixelsToEm(2) solid var(--color-text);
    // border: f.pixelsToEm(2) solid var(--color-text);
    transition: 
            background-color 300ms ease,
            border-color 300ms ease;
    height: f.pixelsToRem($naming-file-container-height-sm);
    display: flex;
    justify-content: center;
    flex-direction: column;
    position: relative;
    
    @media (min-width: f.pixelsToRem($large-screens-breakpoint)) {
        height: f.pixelsToRem($naming-file-container-height);
    }
    
    #name-file-frm {
        padding: f.pixelsToEm(20);
        display: flex;
        flex-direction: column;
        align-items: center;

        @media (min-width: f.pixelsToRem($large-screens-breakpoint)) {
            flex-direction: row;
            justify-content: space-between;
        }

        .input {
            width: 100%;
            overflow: hidden;
            margin-bottom: f.pixelsToEm(20);
            position: relative;
            transition: margin-bottom 300ms ease;

            @media (min-width: f.pixelsToRem($large-screens-breakpoint)) {
                width: calc(70% + f.pixelsToEm(40));
                margin-bottom: f.pixelsToEm(0);
                margin-left: f.pixelsToEm(15);
            }

            &[data-typing=on] {
                margin-bottom: f.pixelsToEm(10);

                .input-field {
                    input {
                        margin-top: f.pixelsToRem(20);
                    }
                }
                label {
                    transform: translate(f.pixelsToRem(5, true), f.pixelsToRem(2, true));
                    font-size: f.pixelsToRem($extra-small-font-size);
                    pointer-events: initial;
                }
            }

            .input-field {
                position: relative;

                input {
                    width: 100%;
                    height: auto;
                    background-color: transparent;
                    border: 0;
                    border-bottom: f.pixelsToRem(2) solid var(--color-text);
                    color: var(--color-text);
                    font-size: f.pixelsToRem($extra-small-font-size + 1);
                    padding: 0 f.pixelsToEm(5);
                    position: relative;
                    transition: 
                        border-bottom-color 300ms ease,
                        margin-top 300ms ease;
        
                    @media (min-width: f.pixelsToRem($large-screens-breakpoint)) {
                        margin: f.pixelsToRem(5) 0;
                    }
    
                    &:focus ~ .line-below-input {
                        right: 0;
                    }
                }
    
                .line-below-input {
                    height: f.pixelsToRem(1);
                    position: absolute;
                    left: 0;
                    right: 100%;
                    background-color: var(--color-text);
                    bottom: 0;
                    transition: right 600ms ease;
    
                    @media (min-width: f.pixelsToRem($large-screens-breakpoint)) {
                        bottom: f.pixelsToEm(5);
                        height: f.pixelsToRem(1);
                    }
                }
            }

            label {
                position: absolute;
                font-size: f.pixelsToRem($extra-small-font-size + 1);
                top: 0;
                left: f.pixelsToEm(5);
                color: var(--color-text);
                pointer-events: none;
                transform: translateY(0);
                transition: 
                    color 300ms ease,
                    transform 300ms ease,
                    font-size 300ms ease;

                @media (min-width: f.pixelsToRem($large-screens-breakpoint)) {
                    transform: translateY(f.pixelsToRem(5));
                }
            }

            .error {
                margin-top: f.pixelsToEm(2);
                display: none;
                margin-left: 0;
                color: var(--color-specific-red);
                position: relative;
                margin-left: f.pixelsToEm(5);

                @media (min-width: f.pixelsToRem($large-screens-breakpoint)) {
                    margin: 0;
                }
            }

            .error::after {
                content: '*';
                position: absolute;
                top: 0;
                right: f.pixelsToEm(5);
            }
        }

        .file-name {
            display: none;
        }

        button {
            @include primary-btn-styling();
            font-size: f.pixelsToRem($small-font-size - 1);
            width: max-content;
            // padding: f.pixelsToEm(5) f.pixelsToEm(15);

            @media (min-width: f.pixelsToRem($large-screens-breakpoint)) {
                font-size: f.pixelsToRem($small-font-size + 1);
                margin-right: f.pixelsToEm(10);
            }
        }
    }

    &[data-file=named] {
        #name-file-frm {

            @media (min-width: f.pixelsToRem($large-screens-breakpoint)) {
                flex-direction: row-reverse;
            }

            .file-name {
                word-wrap: break-word;
                width: 100%;
                height: auto;
                background-color: transparent;
                color: var(--color-text);
                margin-top: f.pixelsToEm(20);
                font-size: f.pixelsToRem($extra-small-font-size + 1);
                padding: 0 f.pixelsToEm(5);

                @media (min-width: f.pixelsToRem($large-screens-breakpoint)) {
                    width: 70%;
                    margin: f.pixelsToEm(5) f.pixelsToEm(20);
                }
            }

            button {
                @media (min-width: f.pixelsToRem($large-screens-breakpoint)) {
                    width: f.pixelsToEm(170);
                }
            }
        }
    }
}

@keyframes fade-in {
    0% { opacity: 0; }
    100% { opacity: 1; }
}

body[data-color-theme="light"] {
    .naming-file-container {
        #name-file-frm {
            .input-field {
                input {
                    border-color: $color-black-secondary;
                }

                label {
                    color: $color-black-secondary;
                }
            }
        }
    }
}

body[data-color-theme="dark"] {
    .naming-file-container {
        #name-file-frm {
            .input-field {
                input {
                    border-color: $color-white-bg-btn;
                }

                label {
                    color: $color-white-bg-btn;
                }
            }
        }
    }
}