@use '../utils/functions' as f;

$animation-feature-container-duration: 900;
$animation-feature-duration: 600;

.features-container {
    width: 100%;
    height: auto;
    color: var(--color-text);

    svg, path {
        fill: var(--color-text);
    }

    button {
        color: inherit;
    }

    &[data-menu-opened="true"] {
        .features-title {
            .arrow {
                transform: translateY(f.pixelsToEm(3)) rotate(180deg);
            }
        }
    }

    & > .title {
        height: f.pixelsToRem(65);
        width: 100%;
        background-color: var(--color-secondary);
        border-bottom: f.pixelsToEm(1) solid var(--color-text);
        display: none;
        justify-content: space-between;
        align-items: center;
        transition: 
            background-color 300ms ease,
            border-color 300ms ease;
        padding-left: f.pixelsToEm(10);
        font-size: f.pixelsToRem(26);

        @media (min-width: f.pixelsToEm(900)) {
            display: flex;
        }
    }

    .features-title {
        border: 0;
        color: inherit;
        height: f.pixelsToEm(60);
        width: 100%;
        display: flex;
        justify-content: space-between;
        align-items: center;
        background-color: var(--color-secondary);
        border-bottom: f.pixelsToEm(2) solid var(--color-text);
        transition: 
            background-color 300ms ease,
            border-color 300ms ease;
        cursor: pointer;

        &:hover,
        &:focus {
            background-color: var(--color-btn-edge);
        }

        @media (min-width: f.pixelsToEm(900)) {
            display: none;
        }

        .title {
            margin-left: f.pixelsToEm(10);
            font-size: f.pixelsToRem(24);
        }

        .arrow {
            margin-right: f.pixelsToEm(28);
            width: f.pixelsToEm(14);
            height: f.pixelsToEm(7);
            opacity: 1;
            pointer-events: initial;
            position: relative;
            transform: translateY(f.pixelsToEm(3)) rotate(0deg);
            transition: 
                transform $animation-feature-container-duration + ms ease,
                opacity 300ms ease;

            @media (min-width: f.pixelsToEm(900)) {
                opacity: 0;
                pointer-events: none;
            }

            svg {
                position: absolute;
                left: 0;
                top: 0;
            }
        }
    }

    .features {
        width: 100%;
        height: auto;

        .feature {
            width: 100%;
            height: auto;

            &[data-description-opened="true"] {
                .wrapper {
                    button {
                        .arrow {
                            transform: rotate(180deg);
                        }
                    }
                }
            }
    
            .wrapper {
                width: inherit;
                height: f.pixelsToEm(60);
                background-color: var(--color-bg-btn);
                border-bottom: f.pixelsToEm(2) solid var(--color-btn-edge);
                transition: 
                        background-color 300ms ease,
                        border-color 300ms ease;
                display: flex;
                justify-content: center;
                align-items: center;
                // overflow: hidden;
                position: relative;
    
                button {
                    width: max(f.pixelsToEm(250), 70%);
                    display: flex;
                    justify-content: space-between;
                    align-items: center;
                    background-color: transparent;
                    border: 0;
                    height: f.pixelsToEm(58);
                    cursor: pointer;
                    transition: 
                        background-color 300ms ease,
                        border-color 300ms ease;
    
                    &:hover,
                    &:focus {
                        background-color: var(--color-secondary);
                    }
    
                    .title {
                        margin-left: f.pixelsToEm(10);
                        font-size: f.pixelsToRem(20);
                        text-transform: uppercase;
            
                        @media (min-width: f.pixelsToEm(900)) {
                            font-size: f.pixelsToRem(22);
                        }
                    }
            
                    .arrow {
                        margin-right: f.pixelsToEm(28);
                        width: f.pixelsToEm(14);
                        height: f.pixelsToEm(7);
                        position: relative;
                        transform: rotate(0deg);
                        transition: transform $animation-feature-duration + ms ease;
            
                        svg {
                            position: absolute;
                            left: 0;
                            top: 0;
                        }
                    }
                }
            }

            .description {
                width: inherit;
                height: auto;
                background-color: var(--color-bg-btn);
                border-bottom: f.pixelsToEm(2) solid var(--color-btn-edge);
                color: var(--color-text);
                transition: 
                        background-color 300ms ease,
                        border-color 300ms ease;
                display: flex;
                align-items: center;
                flex-direction: column;

                .content {
                    padding-bottom: f.pixelsToEm(20);
                    padding-left: f.pixelsToEm(10);
                    padding-right: f.pixelsToEm(10);
                    width: max(f.pixelsToEm(200), 70%);
                    height: auto;
                    font-size: f.pixelsToRem(18);

                    &:first-child {
                        padding-top: f.pixelsToEm(20);
                    }

                    &.has-shortcut {
                        line-height: 1.8;
                    }

                    kbd {
                        background-color: var(--color-secondary);
                        border-radius: f.pixelsToEm(6);
                        font-family: monospace;
                        padding: f.pixelsToEm(4) f.pixelsToEm(8);
                        box-shadow: 
                            0 f.pixelsToEm(1) f.pixelsToEm(1) var(--color-text),
                            0 f.pixelsToEm(2) 0 var(--color-text);
                    }

                    li {
                        margin-left: f.pixelsToEm(15);

                        &:first-child {
                            margin-top: f.pixelsToEm(10);
                        }
                    }
                }
            }
        }
    }
}